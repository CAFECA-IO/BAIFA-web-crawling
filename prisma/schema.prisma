// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource dbPostgresql {
  provider = "postgresql"
  url = env("DATABASE_URL")
}


model transaction_raw {
  id                  Int    @id @default(autoincrement())
  block_hash           String
  block_number         Int
  from                String
  gas                 String
  gas_price            String
  max_fee_per_gas        String
  max_priority_fee_per_gas String
  hash                String @unique   
  input               String
  nonce               String
  to                  String
  transaction_index    String
  value               String
  type                String
  access_list          String
  chain_id             String
  v                   String
  r                   String
  s                   String
  parse_finished  Boolean  @default(false)
}

model block_raw {
  id               Int    @id @default(autoincrement())
  base_fee_per_gas    String
  difficulty       String
  extra_data        String
  gas_limit         String
  gas_used          String
  hash             String    
  logs_bloom        String
  miner            String
  mix_hash          String
  nonce            String
  number           Int @unique    
  parent_hash       String
  receipts_root     String
  sha3_uncles       String
  size             String
  state_root        String
  timestamp        String
  total_difficulty  String
  transactions_root String
  uncles           String
  burnt_fees Int 
  transaction_count Int
  transaction_finished        Boolean  @default(false)
  transaction_receipt_finished Boolean  @default(false)
  parse_finished  Boolean  @default(false)
}

model transaction_receipt_raw {
  id                  Int      @id @default(autoincrement())
  block_hash           String
  block_number         Int
  contract_address     String
  cumulative_gas_used   String
  effective_gas_price   String
  from                String
  gas_used             String
  logs                String
  logs_bloom           String
  status              String
  to                  String
  transaction_hash     String @unique
  transaction_index    String
  type                String
  parse_finished  Boolean  @default(false)
}

model contracts {
  id                  Int      @id @default(autoincrement())
  chain_id            Int?
  contract_address    String? 
  source_code         String?
  creator_address     String?
  created_timestamp   DateTime?       
}

model public_tags {
  id                  Int      @id @default(autoincrement())
  name                String?
  target              String?
  target_type         String?    
}

model evidences {
  id                  Int      @id @default(autoincrement())
  chain_id            Int? 
  created_timestamp   DateTime?
  evidence_address    String?
  state               String?
  content             String?
  creator_address     String?   
}

model chains {
  id                  Int      @id
  chain_name          String?
  chain_icon          String?   
}

model transactions {
  id                  Int      @id @default(autoincrement())
  chain_id            Int? 
  created_timestamp   DateTime?
  hash                String?
  type                String?
  status              String?
  block_hash          String? 
  from_address        String?
  to_address          String?
  evidence_id         Int?
  value               Int?
  fee                 Int?
  related_addresses   String[]       
}

model black_lists {
  id                  Int      @id @default(autoincrement())
  chain_id            Int? 
  created_timestamp   DateTime?
  address_id          Int? 
  public_tag          String?              
}

model review_datas {
  id                  Int      @id @default(autoincrement())
  target              String?
  target_type         String?
  created_timestamp   DateTime?
  content             String?
  stars               Int?
}

model red_flags {
  id                  Int      @id @default(autoincrement())
  chain_id            Int? 
  created_timestamp   DateTime?
  red_flag_type       String?
  total_amount        Int?
  symbol              String?
  related_addresses   String[]
  related_transactions String[]                
}

model blocks {
  id                  Int      @id @default(autoincrement())
  chain_id            Int? 
  created_timestamp   DateTime?
  miner               String?
  reward              String?
  size                Int?
  symbol              String?
  transaction_count   Int?
  parent_hash         String?
  burnt_fees          Int?   
  hash                String?
  number              Int? @unique     
}

model token_balances {
  id                  Int      @id @default(autoincrement())
  address             String?
  value               Int?
  chain_id            Int?
  currency_id         Int?  
}

model token_transfers {
  id                  Int      @id @default(autoincrement())
  from_address        String?
  to_address          String?
  value               Int?
  chain_id            Int?
  currency_id         Int? 
  transaction_hash    String?
  index               Int?            
}

model currencies {
  id                  Int      @id @default(autoincrement())
  risk_level          String?
  price               Int?
  volume_in_24h       Int?
  symbol              String?
  total_amount        Int?
  holder_count        Int?
  total_transfers     Int?
  chain_id            Int?                
}

model addresses {
  id                  Int      @id @default(autoincrement())
  chain_id            Int? 
  created_timestamp   DateTime?
  address             String? @unique
  type                String?
  score               Int?
  latest_active_time  DateTime?     
}

model risk_records {
  id                  Int      @id @default(autoincrement())
  name                String?
  address_id          Int? 
  created_timestamp   DateTime?              
}

model codes {
  id                  Int      @id @default(autoincrement())
  table_name          String?
  table_column        String?
  value               Int?
  meaning             String?
}